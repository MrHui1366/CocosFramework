{"version":3,"sources":["CUIBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\coffee_bean\\ui","sourcesContent":["/** CoffeeBean\r\n * UI库\r\n * \r\n * By Leo\r\n */\r\n\r\nimport CRes from \"../core/CRes\";\r\nimport CLOG from \"../utils/CLOG\";\r\nimport { TAG_COFFEE_BEAN } from \"../common/CGlobal\";\r\n\r\n/**\r\n* UI基类\r\n*/\r\nexport class CUIBase extends cc.Component {\r\n\r\n    // 非单例ui组件引用\r\n    protected static _insts: Array<CUIBase> = null;\r\n\r\n    // 单例ui组件引用\r\n    protected static _inst: CUIBase = null;\r\n\r\n    // 预制体路径\r\n    protected static prefab_url: string;\r\n\r\n    // 是否单例\r\n    protected static is_singleton: boolean;\r\n\r\n    // 描述\r\n    protected static desc: string;\r\n\r\n    // 是否单例\r\n    protected _is_singleton: boolean;\r\n\r\n    /*** 类型 ***/\r\n    protected _type: typeof CUIBase;\r\n\r\n    /**\r\n     * 获取单例引用\r\n     */\r\n    public static getUInstance<T extends CUIBase> ( this: { new(): T; } & typeof CUIBase ): T {\r\n        return this._inst as T;\r\n    }\r\n\r\n    /**\r\n     * 获取非单例引用 们\r\n     */\r\n    public static getUInstances<T extends CUIBase> ( this: { new(): T; } & typeof CUIBase ): Array<CUIBase> {\r\n        return this._insts;\r\n    }\r\n\r\n\r\n    /*** 销毁时 ***/\r\n    protected onDestroy () {\r\n        // 从UI引用中移除引用\r\n        if ( this._is_singleton ) {\r\n            CLOG.I( TAG_COFFEE_BEAN, \"UI:\" + this._type.name + \" inst => null\" );\r\n            this._type._inst = null;\r\n\r\n        } else {\r\n            let index = this._type._insts.findIndex( ( value, index, array ) => { return value == this; } );\r\n            if ( index != -1 ) {\r\n                CLOG.I( TAG_COFFEE_BEAN, \"UI:\" + this._type.name + \" insts\" + index + \"/\" + this._type._insts.length + \" => null\" );\r\n                this._type._insts.splice( index, 1 );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建UI\r\n     * @param parentContainer 父节点，为空则自动挂到摄像机下\r\n     */\r\n    public static async createUI<T extends CUIBase> ( this: { new(): T; } & typeof CUIBase, parentContainer: cc.Node = null ): Promise<T> {\r\n        try {\r\n            // 得到 UI预制体\r\n            let prefab: cc.Prefab = CRes.getRes( this.prefab_url, cc.Prefab );\r\n\r\n            // 若UI预制体并没有缓存\r\n            if ( prefab == null ) {\r\n                CLOG.E( TAG_COFFEE_BEAN, \"ui prefab:{0} is not cached!! please load it first!\" );\r\n                return null;\r\n            }\r\n\r\n            if ( this.is_singleton ) {\r\n                // 单例UI\r\n                // 只有在单例引用为空时\r\n                // 才能创建\r\n                this._inst == null && this.createUIComponent( prefab, parentContainer );\r\n\r\n                // 记录是否类类型，方便释放\r\n                this._inst._is_singleton = true;\r\n                return this._inst as T;\r\n\r\n            } else {\r\n\r\n                if ( this._insts == null ) {\r\n                    this._insts = new Array<CUIBase>();\r\n                }\r\n\r\n                // 非单例UI\r\n                // 每次都可以创建并返回\r\n                let ins = this.createUIComponent( prefab, parentContainer );\r\n                this._insts.push( ins );\r\n\r\n                this._inst._is_singleton = false;\r\n                return ins as T;\r\n            }\r\n\r\n        } catch ( exception ) {\r\n            CLOG.EE( TAG_COFFEE_BEAN, exception );\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建UI实例\r\n     *\r\n     * @private\r\n     * @returns\r\n     * @memberof CUIBase\r\n     */\r\n    private static createUIComponent ( prefab: cc.Prefab, parentContainer: cc.Node = null ): CUIBase {\r\n        // 实例化预制体\r\n        let node = cc.instantiate( prefab );\r\n\r\n        // ui组件实例\r\n        this._inst = node.addComponent( this );\r\n\r\n        // 父容器\r\n        if ( parentContainer == null ) {\r\n            cc.Camera.main.node.addChild( node );\r\n        } else {\r\n            parentContainer.addChild( node );\r\n        }\r\n\r\n        // 记录UI脚本对象的类型\r\n        // 方便释放\r\n        this._inst._type = this;\r\n\r\n        return this._inst;\r\n    }\r\n\r\n    /**\r\n     * 销毁UI\r\n     *\r\n     * ！！注意！！\r\n     * 参数 target 为可选参数\r\n     *\r\n     * 当UI为单例UI的情况下\r\n     *     无论传不传 target 都会销毁单例UI\r\n     *\r\n     * 当UI为非单例UI的情况下\r\n     *     传 target 则销毁 特定的非单例UI\r\n     *   不传 target 则销毁 所有的非单例UI\r\n     * \r\n     * release 释放资源\r\n     * 对于只显示一次的UI\r\n     * 建议在关闭时传true\r\n     * 这样在销毁UI时连带其预制体与UI资源都会一起销毁\r\n     *\r\n     * @static\r\n     * @template T\r\n     * @param this\r\n     * @param [release=false] 是否释放资源\r\n     * @param [target] 销毁目标，可选参数\r\n     * @returns\r\n     * @memberof CUIBase\r\n     */\r\n    public static destoryUI<T extends CUIBase> ( this: { new(): T; } & typeof CUIBase, release: boolean = false, target?: CUIBase ): void {\r\n        if ( this.is_singleton ) {\r\n            this._inst.node.destroy();\r\n            this._inst = null;\r\n        } else {\r\n            if ( target === void 0 ) {\r\n                // 不传参，销毁所有\r\n                for ( let index = 0; index < this._insts.length; index++ ) {\r\n                    this._insts[ index ].node.destroy();\r\n                }\r\n\r\n                this._insts = [];\r\n                return;\r\n            } else {\r\n                // 传参，销毁特定\r\n                for ( let index = 0; index < this._insts.length; index++ ) {\r\n                    const element = this._insts[ index ];\r\n                    if ( element == target ) {\r\n                        element.node.destroy();\r\n                        this._insts.splice( index, 1 );\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // 释放资源\r\n        if ( release )\r\n            CRes.releaseRes( this.prefab_url, true );\r\n    }\r\n\r\n}"]}