{"version":3,"sources":["CSound.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\coffee_bean\\core","sourcesContent":["/**\r\n * CoffeeBean\r\n * 声音封装\r\n * 包含声音的播放控制\r\n * \r\n * By Leo\r\n */\r\n\r\nimport CRes from \"./CRes\";\r\nimport CLOG from \"../utils/CLOG\";\r\nimport CLocalStore from \"../data/CLocalStore\";\r\n\r\nexport default class CSound {\r\n    /**\r\n     * 背景音乐播放器\r\n     */\r\n    private static musicPlayer: cc.AudioSource = null;\r\n\r\n    /*** 是否允许音乐 ***/\r\n    private static enable_music: boolean = true;\r\n\r\n    /**\r\n     * 得到背景音乐播放组件\r\n     * 唯一的\r\n     * 不会随着游戏而销毁的\r\n     */\r\n    private static getMusicPlayer (): cc.AudioSource {\r\n        if ( this.musicPlayer == null ) {\r\n            let musicNode = new cc.Node( \"music_node\" );\r\n            this.musicPlayer = musicNode.addComponent( cc.AudioSource );\r\n            cc.director.getScene().addChild( musicNode );\r\n            cc.game.addPersistRootNode( musicNode );\r\n        }\r\n        return this.musicPlayer;\r\n    }\r\n\r\n    /**\r\n     * 得到音效播放组件\r\n     */\r\n    private static getEffectPlayer (): cc.AudioSource {\r\n        let effectNode = new cc.Node( \"effect_node\" );\r\n        let as = effectNode.addComponent( cc.AudioSource );\r\n        cc.director.getScene().addChild( effectNode );\r\n        return as;\r\n    }\r\n\r\n    /**\r\n     * 播放音效\r\n     * @param url 要播放的音效URL\r\n     */\r\n    public static playEffect ( url: string ): void {\r\n        if ( !this.enable_music ) {\r\n            return;\r\n        }\r\n\r\n        let ac = CRes.getSound( url );\r\n        if ( ac == null ) {\r\n            CLOG.E( \"the audio \" + url + \" was not cached! please cache it first\" );\r\n        }\r\n        let as = this.getEffectPlayer();\r\n        as.clip = ac;\r\n        as.loop = false;\r\n        as.play();\r\n        let lastime = Math.floor( as.getDuration() * 1000 );\r\n        as.scheduleOnce( () => {\r\n            as.node.destroy();\r\n        }, lastime );\r\n    }\r\n\r\n    /**\r\n     * 播放背景音乐\r\n     * @param url 播放得音乐URL\r\n     */\r\n    public static playBGMusic ( url: string ): void {\r\n        if ( !this.enable_music ) {\r\n            return;\r\n        }\r\n\r\n        let ac = CRes.getRes( url, cc.AudioClip );\r\n        if ( ac == null ) {\r\n            CLOG.E( \"the audio \" + url + \" was not cached! please cache it first\" );\r\n        }\r\n        let as = this.getMusicPlayer();\r\n        if ( as.clip == ac ) {\r\n            // 重复播放无意义\r\n            return;\r\n        }\r\n        as.clip = ac;\r\n        as.loop = true;\r\n        as.play();\r\n    }\r\n\r\n    /*** 禁止声音 ***/\r\n    public static disable_music (): void {\r\n        CLocalStore.save_boolean( \"enable_music\", false );\r\n        this.enable_music = false;\r\n        this.getMusicPlayer().stop();\r\n    }\r\n\r\n    /*** 允许声音 ***/\r\n    public static able_music (): void {\r\n        CLocalStore.save_boolean( \"enable_music\", true );\r\n        this.enable_music = true;\r\n\r\n        // 重新播放背景音乐\r\n        let music_player = this.getMusicPlayer();\r\n\r\n        if ( music_player.clip != null ) {\r\n            music_player.play();\r\n        }\r\n    }\r\n\r\n    /*** 是否允许声音 ***/\r\n    public static is_music_enable (): boolean {\r\n        let ret = CLocalStore.load_boolean( \"enable_music\" );\r\n        return ret != null ? ret : true;\r\n    }\r\n\r\n}"]}