{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\coffee_bean\\utils/assets\\coffee_bean\\utils\\CLOG.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\coffee_bean\\utils","sourcesContent":["/**\r\n * CoffeeBean\r\n * LOG库封装\r\n * \r\n * By Leo\r\n */\r\nimport CTime from './CTime';\r\nimport CRes from '../core/CRes';\r\n\r\n\r\n/*** 游戏名 ***/\r\nconst GAME_NAME: string = \"travel_hamster\";\r\n\r\nexport default class CLOG {\r\n\r\n    /*** 是否已经激活 ***/\r\n    private static _enable: boolean = false;\r\n\r\n    /**\r\n     * 启用LOG系统\r\n     */\r\n    public static enable (): void {\r\n        this._enable = true;\r\n    }\r\n\r\n    /**\r\n     * 禁用LOG系统\r\n     */\r\n    public static disable (): void {\r\n        this._enable = false;\r\n    }\r\n\r\n    /**\r\n     * 得到输出字符串\r\n     * 本函数在LOG前面增加了时间和LOG类型\r\n     * @param args 参数数组\r\n     * @param logType log类型 error 还是 warn 还是 info\r\n     * @param logTag 标识，用于区分LOG\r\n     */\r\n    private static getMsgStr ( args: string[], logType: string, logTag: string ): string {\r\n        let msg;\r\n        switch ( args.length ) {\r\n            case 0:\r\n                return \" \";\r\n            case 1:\r\n                msg = args[ 0 ];\r\n                break;\r\n            default:\r\n                msg = String.formatString.apply( null, args );\r\n                break;\r\n\r\n        }\r\n\r\n        return \"[\" + CTime.getNowTimeStr() + \" |\" + logType + \"| \" + logTag + \" ] \" + msg;\r\n    };\r\n\r\n    /**\r\n       * 输出一个 Info LOG\r\n       * @param tag 标识，用于区分LOG\r\n       * @param params 参数们，可以用来格式化字符串，占位符支持 {0},{1},{2}....\r\n       */\r\n    public static I ( tag: string, ...params ): void {\r\n        if ( !this._enable ) return;\r\n\r\n        const outStr = this.getMsgStr( params, \" INFO\", tag );\r\n        cc.log( outStr );\r\n    }\r\n\r\n    /**\r\n     * 输出一个 Error LOG\r\n     * @param tag 标识，用于区分LOG\r\n     * @param params 参数们，可以用来格式化字符串，占位符支持 {0},{1},{2}....\r\n     */\r\n    public static E ( tag: string, ...params ): void {\r\n        if ( !this._enable ) return;\r\n        const outStr = this.getMsgStr( params, \"ERROR\", tag );\r\n        cc.error( outStr );\r\n    }\r\n\r\n    /**\r\n     * 输出一个 Error LOG\r\n     * @param err 错误对象以及堆栈信息\r\n     */\r\n    public static EE ( tag: string, err: Error ): void {\r\n        if ( !this._enable ) return;\r\n        this.E( tag, \"----- \" + err.name + \"-----\" );\r\n        this.E( tag, \"message >> \" + err.message );\r\n        this.E( tag, \"stack   >> \" + err.stack );\r\n    }\r\n\r\n    /**\r\n     * 输出一个 Warning LOG\r\n     * @param tag 标识，用于区分LOG\r\n     * @param params 参数们，可以用来格式化字符串，占位符支持 {0},{1},{2}....\r\n     */\r\n    public static W ( tag: string, ...params ): void {\r\n        if ( !this._enable ) return;\r\n        const outStr = this.getMsgStr( params, \" WARN\", tag );\r\n        cc.warn( outStr );\r\n    }\r\n\r\n    /**\r\n     * 条件为真时输出 Info\r\n     * @param tag 标识，用于区分LOG\r\n     * @param condition 条件\r\n     * @param params 参数们，可以用来格式化字符串，占位符支持 {0},{1},{2}....\r\n     */\r\n    public static IF ( tag: string, condition: boolean, ...params ) {\r\n        if ( !this._enable ) return;\r\n        if ( !condition ) return;\r\n\r\n        const outStr = this.getMsgStr( params, \" INFO\", tag );\r\n        cc.log( outStr );\r\n    }\r\n\r\n    /**\r\n     * 条件为真时输出 Info\r\n     * @param tag 标识，用于区分LOG\r\n     * @param condition 条件\r\n     * @param params 参数们，可以用来格式化字符串，占位符支持 {0},{1},{2}....\r\n     */\r\n    public static EF ( tag: string, condition: boolean, ...params ) {\r\n        if ( !this._enable ) return;\r\n        if ( !condition ) return;\r\n\r\n        const outStr = this.getMsgStr( params, \"ERROR\", tag );\r\n        cc.log( outStr );\r\n    }\r\n\r\n    /**\r\n     * 条件为真时输出 Warning\r\n     * @param tag 标识，用于区分LOG\r\n     * @param condition 条件\r\n     * @param params 参数们，可以用来格式化字符串，占位符支持 {0},{1},{2}....\r\n     */\r\n    public static WF ( tag: string, condition: boolean, ...params ) {\r\n        if ( !this._enable ) return;\r\n        if ( !condition ) return;\r\n\r\n        const outStr = this.getMsgStr( params, \" WARN\", tag );\r\n        cc.log( outStr );\r\n    }\r\n}"]}