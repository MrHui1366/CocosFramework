{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\coffee_bean\\core/assets\\coffee_bean\\core\\CMap.ts"],"names":[],"mappings":";;;;;AAAA;;;;;;;;GAQG;;AAUH,iBAAiB;AACjB;IAGI;QACI,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,EAAY,CAAC;IACtC,CAAC;IAED,eAAe;IACR,kBAAG,GAAV,UAAa,GAAM,EAAE,KAAQ;QACzB,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAE,UAAE,KAAK,EAAE,KAAK,EAAE,KAAK,IAAQ,OAAO,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAE,CAAC;QAC3F,IAAK,KAAK,IAAI,CAAC,CAAC,EAAG;YACf,IAAI,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,KAAK,GAAG,KAAK,CAAC;SACpC;aAAM;YACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,CAAE,CAAC;SACpD;IACL,CAAC;IAED,mBAAmB;IACZ,kBAAG,GAAV,UAAa,GAAM;QACf,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAE,UAAE,KAAK,EAAE,KAAK,EAAE,KAAK,IAAQ,OAAO,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAE,CAAC;QAC3F,IAAK,KAAK,IAAI,CAAC,CAAC,EAAG;YACf,OAAO,IAAI,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,KAAK,CAAC;SACnC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAGD,sBAAW,sBAAI;QADf,cAAc;aACd;YACI,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5B,CAAC;;;OAAA;IAED,eAAe;IACR,oBAAK,GAAZ,UAAe,KAAa;QACxB,IAAK,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAG;YAC1C,OAAO,IAAI,CAAC;SACf;QAED,OAAO,IAAI,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;IAC9B,CAAC;IAED,kBAAkB;IACX,kBAAG,GAAV,UAAa,GAAM;QACf,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAE,UAAE,KAAK,EAAE,KAAK,EAAE,KAAK,IAAQ,OAAO,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAE,CAAC;QAC3F,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC;IAED,eAAe;IACR,qBAAM,GAAb,UAAgB,GAAM;QAClB,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAE,UAAE,KAAK,EAAE,KAAK,EAAE,KAAK,IAAQ,OAAO,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAE,CAAC;QAC3F,IAAK,KAAK,IAAI,CAAC,CAAC,EAAG;YACf,IAAI,CAAC,IAAI,CAAC,MAAM,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;SAChC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,WAAC;AAAD,CAvDA,AAuDC,IAAA;AAvDY,oBAAI","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\coffee_bean\\core","sourcesContent":["/**\r\n * Map实现\r\n * 对于ES6来说，内置有Map类\r\n * 而部分无法使用ES6的程序可以使用本类来替代\r\n * 因此建议大多数时候使用原生Map类\r\n *\r\n * Map 是 ES6的新特性，需要修改tsconfig.json 中 lib 和target 为es6\r\n * CMap 为框架CMap 适合大多数设备\r\n */\r\n\r\n/*** 键值对 ***/\r\nexport interface KV<K, V> {\r\n    /*** 键 ***/\r\n    key: K;\r\n    /*** 值 ***/\r\n    value: V;\r\n}\r\n\r\n/*** 自定义Map类 ***/\r\nexport class CMap<K, V>{\r\n    private data: Array<KV<K, V>>;\r\n\r\n    public constructor () {\r\n        this.data = new Array<KV<K, V>>();\r\n    }\r\n\r\n    /*** 设置键值对 ***/\r\n    public set ( key: K, value: V ) {\r\n        let index = this.data.findIndex( ( value, index, array ) => { return value.key == key; } );\r\n        if ( index != -1 ) {\r\n            this.data[ index ].value = value;\r\n        } else {\r\n            this.data.push( { \"key\": key, \"value\": value } );\r\n        }\r\n    }\r\n\r\n    /*** 从map中获得数据 ***/\r\n    public get ( key: K ): V {\r\n        let index = this.data.findIndex( ( value, index, array ) => { return value.key == key; } );\r\n        if ( index != -1 ) {\r\n            return this.data[ index ].value;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*** 得到数量 ***/\r\n    public get size (): number {\r\n        return this.data.length;\r\n    }\r\n\r\n    /*** 获得键值对 ***/\r\n    public getKV ( index: number ): KV<K, V> {\r\n        if ( index < 0 || index >= this.data.length ) {\r\n            return null;\r\n        }\r\n\r\n        return this.data[ index ];\r\n    }\r\n\r\n    /*** 是否拥有此键值对 ***/\r\n    public has ( key: K ): boolean {\r\n        let index = this.data.findIndex( ( value, index, array ) => { return value.key == key; } );\r\n        return index != -1;\r\n    }\r\n\r\n    /*** 移除一个键 ***/\r\n    public delete ( key: K ): boolean {\r\n        let index = this.data.findIndex( ( value, index, array ) => { return value.key == key; } );\r\n        if ( index != -1 ) {\r\n            this.data.splice( index, 1 );\r\n        }\r\n        return true;\r\n    }\r\n}"]}