{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\coffee_bean\\utils/assets\\coffee_bean\\utils\\CTime.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;;GAMG;AACH,iCAA4B;AAE5B;IAAA;IAsEA,CAAC;IArEG;;;OAGG;IACW,mBAAa,GAA3B,UAA8B,SAA2C;QAA3C,0BAAA,EAAA,mCAA2C;QACrE,OAAO,KAAK,CAAC,UAAU,CAAE,IAAI,IAAI,EAAE,EAAE,SAAS,CAAE,CAAC;IACrD,CAAC;IAED;;;;;;;;;OASG;IACW,gBAAU,GAAxB,UAA2B,aAAqB,EAAE,SAA2C;QAA3C,0BAAA,EAAA,mCAA2C;QACzF,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,CAAE,aAAa,CAAE,CAAC;QAC9B,OAAO,KAAK,CAAC,UAAU,CAAE,IAAI,EAAE,SAAS,CAAE,CAAC;IAC/C,CAAC;IAED;;;;OAIG;IACY,gBAAU,GAAzB,UAA4B,IAAU,EAAE,SAA2C;QAA3C,0BAAA,EAAA,mCAA2C;QAC/E,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAA;QAC7B,IAAI,CAAC,GAAG;YACJ,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC;YACzB,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE;YACpB,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE;YACrB,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE;YACvB,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE;YACvB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAE,CAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAE,GAAG,CAAC,CAAE;YAC/C,GAAG,EAAE,eAAK,CAAC,WAAW,CAAE,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,GAAG,CAAE;SAC3D,CAAC;QACF,IAAK,MAAM,CAAC,IAAI,CAAE,SAAS,CAAE,EAAG;YAC5B,SAAS,GAAG,SAAS,CAAC,OAAO,CAAE,MAAM,CAAC,EAAE,EAAE,CAAE,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,CAAE,CAAC,MAAM,CAAE,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE,CAAE,CAAC;SAC1G;QACD,KAAM,IAAI,CAAC,IAAI,CAAC,EAAG;YACf,IAAK,IAAI,MAAM,CAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAE,CAAC,IAAI,CAAE,SAAS,CAAE,EAAG;gBACjD,SAAS,GAAG,SAAS,CAAC,OAAO,CAAE,MAAM,CAAC,EAAE,EAAE,CAAE,MAAM,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAE,CAAC,CAAC,CAAC,CAAE,CAAE,IAAI,GAAG,CAAC,CAAE,CAAC,CAAE,CAAE,CAAC,MAAM,CAAE,CAAE,EAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAE,CAAC,MAAM,CAAE,CAAE,CAAE,CAAC;aAC/I;SACJ;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACW,cAAQ,GAAtB,UAAyB,OAAe;QACpC,OAAO,IAAI,OAAO,CAAQ,UAAE,OAAO,EAAE,MAAM;YACvC,UAAU,CAAE,cAAM,OAAA,OAAO,EAAE,EAAT,CAAS,EAAE,OAAO,CAAE,CAAC;QAC3C,CAAC,CAAE,CAAC;IACR,CAAC;IAGD;;OAEG;IACW,qBAAe,GAA7B;QACI,OAAO,CAAE,IAAI,IAAI,EAAE,CAAE,CAAC,OAAO,EAAE,CAAC;IACpC,CAAC;IACL,YAAC;AAAD,CAtEA,AAsEC,IAAA","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\coffee_bean\\utils","sourcesContent":["/**\r\n * CoffeeBean\r\n * 时间模块\r\n * 包括常见的各种对时间的操作\r\n * \r\n * By Leo\r\n */\r\nimport CMath from \"./CMath\";\r\n\r\nexport default class CTime {\r\n    /**\r\n     * 根据格式得到当前时间字符串\r\n     * @param formatstr 格式串  \"y+\"//年份  \"M+\"//月份  \"d+\"//日  \"h+\"//小时  \"m+\"//分  \"s+\"//秒  \"q+\"//季度  \"S\" //毫秒\r\n     */\r\n    public static getNowTimeStr ( formatstr: string = \"yyyy/MM/dd hh:mm:ss.S\" ): string {\r\n        return CTime.formatTime( new Date(), formatstr );\r\n    }\r\n\r\n    /**\r\n     * 传入时间戳和时间格式\r\n     * 返回时间字符串\r\n     *\r\n     * @static\r\n     * @param timeStamp 时间戳(毫秒)\r\n     * @param [string=\"yyyy/MM/dd hh:mm:ss.S\"] 时间格式\r\n     * @returns\r\n     * @memberof CTime\r\n     */\r\n    public static getTimeStr ( millTimeStamp: number, formatstr: string = \"yyyy/MM/dd hh:mm:ss.S\" ): string {\r\n        let date = new Date();\r\n        date.setTime( millTimeStamp );\r\n        return CTime.formatTime( date, formatstr );\r\n    }\r\n\r\n    /**\r\n     * 格式化时间\r\n     * @param time 时间Date\r\n     * @param formatstr 格式串   \"y+\"//年份  \"M+\"//月份  \"d+\"//日  \"h+\"//小时  \"m+\"//分  \"s+\"//秒  \"q+\"//季度  \"S\" //毫秒\r\n     */\r\n    private static formatTime ( time: Date, formatstr: string = \"yyyy/MM/dd hh:mm:ss.S\" ): string {\r\n        cc.Node.EventType.MOUSE_ENTER\r\n        var o = {\r\n            \"M+\": time.getMonth() + 1,                                       //月份\r\n            \"d+\": time.getDate(),                                            //日\r\n            \"h+\": time.getHours(),                                           //小时\r\n            \"m+\": time.getMinutes(),                                         //分\r\n            \"s+\": time.getSeconds(),                                         //秒\r\n            \"q+\": Math.floor( ( time.getMonth() + 3 ) / 3 ),                     //季度\r\n            \"S\": CMath.fixedNumber( time.getMilliseconds(), 3, \"0\" ),         //毫秒 前面补0  3个\r\n        };\r\n        if ( /(y+)/.test( formatstr ) ) {\r\n            formatstr = formatstr.replace( RegExp.$1, ( time.getFullYear() + \"\" ).substr( 4 - RegExp.$1.length ) );\r\n        }\r\n        for ( var k in o ) {\r\n            if ( new RegExp( \"(\" + k + \")\" ).test( formatstr ) ) {\r\n                formatstr = formatstr.replace( RegExp.$1, ( RegExp.$1.length == 1 ) ? ( o[ k ] ) : ( ( \"00\" + o[ k ] ).substr( ( \"\" + o[ k ] ).length ) ) );\r\n            }\r\n        }\r\n        return formatstr;\r\n    }\r\n\r\n    /**\r\n     * 异步等待\r\n     * await CTime.waitTime(1000);  //等待1秒\r\n     * @param millsec 等待的毫秒数\r\n     */\r\n    public static waitTime ( millsec: number ): Promise<void> {\r\n        return new Promise<void>( ( resolve, reject ) => {\r\n            setTimeout( () => resolve(), millsec );\r\n        } );\r\n    }\r\n\r\n\r\n    /**\r\n     * 得到当前时间戳\r\n     */\r\n    public static getNowTimeStamp (): number {\r\n        return ( new Date() ).getTime();\r\n    }\r\n}\r\n\r\n"]}